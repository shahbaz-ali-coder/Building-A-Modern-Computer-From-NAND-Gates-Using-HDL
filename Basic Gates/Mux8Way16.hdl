// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001,010,011,100,101,110
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Not(in=sel[0],out=sel0bar);
	Not(in=sel[1],out=sel1bar);
	Not(in=sel[2],out=sel2bar);
	And3in(a=sel2bar,b=sel1bar,c=sel0bar,out=c1);//000
	And3in(a=sel2bar,b=sel1bar,c=sel[0],out=c2);//001
	And3in(a=sel2bar,b=sel[1],c=sel0bar,out=c3);//010
	And3in(a=sel2bar,b=sel[1],c=sel[0],out=c4);//011
	And3in(a=sel[2],b=sel1bar,c=sel0bar,out=c5);//100
	And3in(a=sel[2],b=sel1bar,c=sel[0],out=c6);//101
	And3in(a=sel[2],b=sel[1],c=sel0bar,out=c7);//110
	And3in(a=sel[2],b=sel[1],c=sel[0],out=c8);//111
	Oneto16(in=c1,out=v1);
	Oneto16(in=c2,out=v2);
	Oneto16(in=c3,out=v3);
	Oneto16(in=c4,out=v4);
	Oneto16(in=c5,out=v5);
	Oneto16(in=c6,out=v6);
	Oneto16(in=c7,out=v7);
	Oneto16(in=c8,out=v8);
	And16(a=a,b=v1,out=out1);
	And16(a=b,b=v2,out=out2);
	And16(a=c,b=v3,out=out3);
	And16(a=d,b=v4,out=out4);
	And16(a=e,b=v5,out=out5);
	And16(a=f,b=v6,out=out6);
	And16(a=g,b=v7,out=out7);
	And16(a=h,b=v8,out=out8);
	Or16(a=out1,b=out2,out=ans1);
	Or16(a=out3,b=ans1,out=ans2);
	Or16(a=out4,b=ans2,out=ans3);
	Or16(a=out5,b=ans3,out=ans4);
	Or16(a=out6,b=ans4,out=ans5);
	Or16(a=out7,b=ans5,out=ans6);
	Or16(a=out8,b=ans6,out=out);
	
		
	
		
}